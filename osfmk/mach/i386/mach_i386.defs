/*
 * Copyright (c) 2000 Apple Computer, Inc. All rights reserved.
 *
 * @APPLE_LICENSE_HEADER_START@
 * 
 * The contents of this file constitute Original Code as defined in and
 * are subject to the Apple Public Source License Version 1.1 (the
 * "License").  You may not use this file except in compliance with the
 * License.  Please obtain a copy of the License at
 * http://www.apple.com/publicsource and read it before using this file.
 * 
 * This Original Code and all software distributed under the License are
 * distributed on an "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER
 * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
 * INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT.  Please see the
 * License for the specific language governing rights and limitations
 * under the License.
 * 
 * @APPLE_LICENSE_HEADER_END@
 */
/*
 * @OSF_COPYRIGHT@
 */
/*
 * HISTORY
 * 
 * Revision 1.1.1.1  1998/09/22 21:05:31  wsanchez
 * Import of Mac OS X kernel (~semeria)
 *
 * Revision 1.1.1.1  1998/03/07 02:25:47  wsanchez
 * Import of OSF Mach kernel (~mburg)
 *
 * Revision 1.2.9.1  1994/09/23  02:37:21  ezf
 * 	change marker to not FREE
 * 	[1994/09/22  21:40:05  ezf]
 *
 * Revision 1.2.6.2  1994/03/17  22:38:39  dwm
 * 	The infamous name change:  thread_activation + thread_shuttle = thread.
 * 	[1994/03/17  21:28:20  dwm]
 * 
 * Revision 1.2.6.1  1994/01/12  17:56:07  dwm
 * 	Coloc: initial restructuring to follow Utah model.
 * 	[1994/01/12  17:30:21  dwm]
 * 
 * Revision 1.2.2.3  1993/09/10  13:08:26  rod
 * 	Zap obsolete MACH_IPC_TYPED conditional code.
 * 	[1993/08/31  11:29:37  rod]
 * 
 * Revision 1.2.2.2  1993/06/09  02:40:40  gm
 * 	Added to OSF/1 R1.3 from NMK15.0.
 * 	[1993/06/02  21:16:18  jeffc]
 * 
 * Revision 1.2  1993/04/19  16:34:07  devrcs
 * 	Merge untyped ipc:
 * 	Introducing new MIG syntax for Untyped IPC (via compile option
 * 	MACH_IPC_TYPED)
 * 	[1993/02/17  23:44:54  travos]
 * 
 * Revision 1.1  1992/09/30  02:22:34  robert
 * 	Initial revision
 * 
 * $EndLog$
 */
/* CMU_HIST */
/*
 * Revision 2.2.3.1  92/03/03  16:21:26  jeffreyh
 * 	Changes from TRUNK
 * 	[92/02/26  11:58:37  jeffreyh]
 * 
 * Revision 2.3  92/01/03  20:19:56  dbg
 * 	Renamed io_map to io_port_add.  Added io_port_remove,
 * 	io_port_list, set_ldt, get_ldt.
 * 	[91/08/20            dbg]
 * 
 * Revision 2.2  91/07/31  17:51:57  dbg
 * 	Created.
 * 	[91/07/30  17:09:09  dbg]
 * 
 */
/* CMU_ENDHIST */
/* 
 * Mach Operating System
 * Copyright (c) 1991 Carnegie Mellon University
 * All Rights Reserved.
 * 
 * Permission to use, copy, modify and distribute this software and its
 * documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND FOR
 * ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 * 
 *  Software Distribution Coordinator  or  Software.Distribution@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 * 
 * any improvements or extensions that they make and grant Carnegie Mellon 
 * the rights to redistribute these changes.
 */

/*
 */

/*
 * Special functions for i386.
 */

subsystem
#if	KERNEL_SERVER
	  KernelServer
#endif	KERNEL_SERVER
		       mach_i386 3800;

#include <mach/std_types.defs>
#include <mach/mach_types.defs>
#include <device/device_types.defs>

type	device_list_t	=	^array[] of device_t;

type	descriptor_t	= 	struct[2] of int;
type	descriptor_list_t =	array[*] of descriptor_t;

#undef	i386		/* XXX! */
import <mach/i386/mach_i386_types.h>;

routine	i386_io_port_add(
		target_act	: thread_act_t;
		device		: device_t);

routine	i386_io_port_remove(
		target_act	: thread_act_t;
		device		: device_t);

routine	i386_io_port_list(
		target_act	: thread_act_t;
	out	device_list	: device_list_t);

routine	i386_set_ldt(
		target_act	: thread_act_t;
		first_selector	: int;
		desc_list	: descriptor_list_t
);

routine	i386_get_ldt(
		target_act	: thread_act_t;
		first_selector	: int;
		selector_count	: int;
	out	desc_list	: descriptor_list_t);
