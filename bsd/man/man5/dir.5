.\"	$NetBSD: dir.5,v 1.5 1995/03/28 17:30:20 jtc Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)dir.5	8.3 (Berkeley) 4/19/94
.\"
.Dd April 19, 1994
.Dt DIR 5
.Os BSD 4.2
.Sh NAME
.Nm dir ,
.Nm dirent
.Nd directory file format
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/dir.h>
.Sh DESCRIPTION
Directories provide a convenient hierarchical method of grouping
files while obscuring the underlying details of the storage medium.
A directory file is differentiated from a plain file
by a flag in its
.Xr inode 5
entry.
It consists of records (directory entries) each of which contains
information about a file and a pointer to the file itself.
Directory entries may contain other directories
as well as plain files; such nested directories are refered to as
subdirectories. 
A hierarchy of directories and files is formed in this manner
and is called a file system (or referred to as a file system tree).
.\" An entry in this tree,
.\" nested or not nested,
.\" is a pathname.
.Pp
Each directory file contains two special directory entries; one is a pointer
to the directory itself
called dot
.Ql \&.
and the other a pointer to its parent directory called dot-dot
.Ql \&.. .
Dot and dot-dot
are valid pathnames, however,
the system root directory
.Ql / ,
has no parent and dot-dot points to itself like dot.
.Pp
File system nodes are ordinary directory files on which has
been grafted a file system object, such as a physical disk or a
partitioned area of such a disk.
(See
.Xr mount 1
and
.Xr mount 8 . )
.Pp
The directory entry format is defined in the file
.Aq sys/dirent.h 
and further in the file
.Aq dirent.h :
.Bd -literal
/*** Excerpt from <sys/dirent.h> ***/
/*
 * The dirent structure defines the format of directory entries.
 *
 * A directory entry has a struct dirent at the front of it, containing its
 * inode number, the length of the entry, and the length of the name
 * contained in the entry.  These are followed by the name padded to a 4
 * byte boundary with null bytes.  All names are guaranteed null terminated.
 * The maximum length of a name in a directory is MAXPATHLEN.
 */

#ifndef _SYS_DIRENT_H 
#define _SYS_DIRENT_H 

struct dirent {
        ino_t     d_ino;                /* file number of entry */
        u_int64_t d_seekoff;            /* length of this record */
        u_int16_t d_reclen;             /* length of this record */
        u_int16_t d_namlen;             /* length of string in d_name */
        u_int8_t  d_type;               /* file type, see below */
        char      d_name[MAXPATHLEN];   /* name must be no longer than this */
};

/*
 * File types
 */
#define DT_UNKNOWN       0
#define DT_FIFO          1
#define DT_CHR           2
#define DT_DIR           4
#define DT_BLK           6
#define DT_REG           8
#define DT_LNK          10
#define DT_SOCK         12
#define DT_WHT          14

#endif /* !_SYS_DIRENT_H_ */

.Ed
-----------------------------------------
.Bd -literal
/*** Excerpt from <dirent.h> ***/

#ifndef _DIRENT_H 
#define _DIRENT_H 

/* definitions for library routines operating on directories. */
#define DIRBLKSIZ       1024

struct _telldir;                /* see telldir.h */

/* structure describing an open directory. */
typedef struct {
        int     __dd_fd;        /* file descriptor associated with directory */
        long    __dd_loc;       /* offset in current buffer */
        long    __dd_size;      /* amount of data returned by getdirentries */
        char    *__dd_buf;      /* data buffer */
        int     __dd_len;       /* size of data buffer */
        long    __dd_seek;      /* magic cookie returned by getdirentries */
        long    __dd_rewind;    /* magic cookie for rewinding */
        int     __dd_flags;     /* flags for readdir */
        pthread_mutex_t __dd_lock; /* for thread locking */
        struct _telldir *__dd_td; /* telldir position recording */
} DIR;

#define dirfd(dirp)     ((dirp)->__dd_fd)

/* flags for opendir2 */
#define DTF_HIDEW       0x0001  /* hide whiteout entries */
#define DTF_NODUP       0x0002  /* don't return duplicate names */
#define DTF_REWIND      0x0004  /* rewind after reading union stack */
#define __DTF_READALL   0x0008  /* everything has been read */

#endif /* !_DIRENT_H_ */
.Ed
.Sh SEE ALSO
.Xr fs 5 ,
.Xr inode 5
.Sh HISTORY
A
.Nm
file format appeared in
.At v7 .
