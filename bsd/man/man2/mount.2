.\"	$OpenBSD: mount.2,v 1.6 1997/03/09 19:41:16 millert Exp $
.\"	$NetBSD: mount.2,v 1.12 1996/02/29 23:47:48 jtc Exp $
.\"
.\" Copyright (c) 1980, 1989, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)mount.2	8.2 (Berkeley) 12/11/93
.\"
.Dd December 11, 1993
.Dt MOUNT 2
.Os BSD 4
.Sh NAME
.Nm mount ,
.Nm unmount
.Nd mount or dismount a filesystem
.Sh SYNOPSIS
.Fd #include <sys/param.h>
.Fd #include <sys/mount.h>
.Ft int
.Fn mount "const char *type" "const char *dir" "int flags" "void *data"
.Ft int
.Fn unmount "const char *dir" "int flags"
.Sh DESCRIPTION
The
.Fn mount
function grafts
a filesystem object onto the system file tree
at the point
.Ar dir .
The argument
.Ar data
describes the filesystem object to be mounted.
The argument
.Ar type
tells the kernel how to interpret
.Ar data
(See
.Ar type
below).
The contents of the filesystem
become available through the new mount point
.Ar dir .
Any files in
.Ar dir
at the time
of a successful mount are swept under the carpet so to speak, and
are unavailable until the filesystem is unmounted.
.Pp
The following
.Ar flags
may be specified to
suppress default semantics which affect filesystem access.
.Bl -tag -width MNT_SYNCHRONOUS
.It Dv MNT_RDONLY
The filesystem should be treated as read-only;
Even the super-user may not write on it.
.It Dv MNT_NOATIME
Do not update the access time on files in the filesystem unless
the modification or status change times are also being updated.
.It Dv MNT_NOEXEC
Do not allow files to be executed from the filesystem.
.It Dv MNT_NOSUID
Do not honor setuid or setgid bits on files when executing them.
.It Dv MNT_NODEV
Do not interpret special files on the filesystem.
.It Dv MNT_UNION
Union with underlying filesystem instead of obscuring it.
.It Dv MNT_SYNCHRONOUS
All I/O to the filesystem should be done synchronously.
.El
.Pp
The flag
.Dv MNT_UPDATE
indicates that the mount command is being applied
to an already mounted filesystem.
This allows the mount flags to be changed without requiring
that the filesystem be unmounted and remounted.
Some filesystems may not allow all flags to be changed.
For example,
most filesystems will not allow a change from read-write to read-only.
.Pp
The
.Fa type
argument defines the type of the filesystem.
The types of filesystems known to the system are defined in
.Aq Pa sys/mount.h .
.Fa Data
is a pointer to a structure that contains the type
specific arguments to mount.
The currently supported types of filesystems and
their type specific data are:
.Pp
.Dv MOUNT_FFS
.Bd -literal -offset indent -compact
struct ufs_args {
      char      *fspec;             /* block special file to mount */
      struct    export_args export; /* network export information */
};
.Ed
.Pp
.Dv MOUNT_NFS
.Bd -literal -offset indent -compact
struct nfs_args {
      int             version;      /* args structure version */
      struct sockaddr *addr;        /* file server address */
      int             addrlen;      /* length of address */
      int             sotype;       /* Socket type */
      int             proto;        /* and Protocol */
      u_char          *fh;          /* File handle to be mounted */
      int             fhsize;       /* Size, in bytes, of fh */
      int             flags;        /* flags */
      int             wsize;        /* write size in bytes */
      int             rsize;        /* read size in bytes */
      int             readdirsize;  /* readdir size in bytes */
      int             timeo;        /* initial timeout in .1 secs */
      int             retrans;      /* times to retry send */
      int             maxgrouplist; /* Max. size of group list */
      int             readahead;    /* # of blocks to readahead */
      int             leaseterm;    /* Term (sec) of lease */
      int             deadthresh;   /* Retrans threshold */
      char            *hostname;    /* server's name */
};
.Ed
.Pp
.Dv MOUNT_MFS
.Bd -literal -offset indent -compact
struct mfs_args {
      char	*fspec;             /* name to export for statfs */
      struct	export_args export; /* if we can export an MFS */
      caddr_t	base;               /* base of filesystem in mem */
      u_long	size;               /* size of filesystem */
};
.Ed
.Pp
The
.Fn umount
function call disassociates the filesystem from the specified
mount point
.Fa dir .
.Pp
The
.Fa flags
argument may specify
.Dv MNT_FORCE
to specify that the filesystem should be forcibly unmounted even if files are
still active.
Active special devices continue to work,
but any further accesses to any other active files result in errors
even if the filesystem is later remounted.
.Sh RETURN VALUES
The
.Fn mount
returns the value 0 if the mount was successful, otherwise -1 is returned
and the variable
.Va errno
is set to indicate the error.
.Pp
.Nm Umount
returns the value 0 if the umount succeeded; otherwise -1 is returned
and the variable
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn Mount
will fail when one of the following occurs:
.Bl -tag -width [ENAMETOOLONG]
.It Bq Er EPERM
The caller is not the super-user.
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded
.Dv {NAME_MAX}
characters, or an entire path name exceeded
.Dv {PATH_MAX}
characters.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating a pathname.
.It Bq Er ENOENT
A component of
.Fa dir
does not exist.
.It Bq Er ENOTDIR
A component of
.Ar name
is not a directory,
or a path prefix of
.Ar special
is not a directory.
.It Bq Er EINVAL
A pathname contains a character with the high-order bit set.
.It Bq Er EBUSY
Another process currently holds a reference to
.Fa dir .
.It Bq Er EFAULT
.Fa Dir
points outside the process's allocated address space.
.El
.Pp
The following errors can occur for a
.Em ufs
filesystem mount:
.Bl -tag -width [ENOTBLK]
.It Bq Er ENODEV
A component of ufs_args
.Ar fspec
does not exist.
.It Bq Er ENOTBLK
.Ar Fspec
is not a block device.
.It Bq Er ENXIO
The major device number of
.Ar fspec
is out of range (this indicates no device driver exists
for the associated hardware).
.It Bq Er EBUSY
.Ar Fspec
is already mounted.
.It Bq Er EMFILE
No space remains in the mount table.
.It Bq Er EINVAL
The super block for the filesystem had a bad magic
number or an out of range block size.
.It Bq Er ENOMEM
Not enough memory was available to read the cylinder
group information for the filesystem.
.It Bq Er EIO
An I/O error occurred while reading the super block or
cylinder group information.
.It Bq Er EFAULT
.Ar Fspec
points outside the process's allocated address space.
.El
.Pp
The following errors can occur for a
.Em nfs
filesystem mount:
.Bl -tag -width [ETIMEDOUT]
.It Bq Er ETIMEDOUT
.Em Nfs
timed out trying to contact the server.
.It Bq Er EFAULT
Some part of the information described by nfs_args
points outside the process's allocated address space.
.El
.Pp
The following errors can occur for a
.Em mfs
filesystem mount:
.Bl -tag -width [EMFILE]
.It Bq Er EMFILE
No space remains in the mount table.
.It Bq Er EINVAL
The super block for the filesystem had a bad magic
number or an out of range block size.
.It Bq Er ENOMEM
Not enough memory was available to read the cylinder
group information for the filesystem.
.It Bq Er EIO
A paging error occurred while reading the super block or
cylinder group information.
.It Bq Er EFAULT
.Em Name
points outside the process's allocated address space.
.El
.Pp
.Nm Umount
may fail with one of the following errors:
.Bl -tag -width [ENAMETOOLONG]
.It Bq Er EPERM
The caller is not the super-user.
.It Bq Er ENOTDIR
A component of the path is not a directory.
.It Bq Er EINVAL
The pathname contains a character with the high-order bit set.
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded
.Dv {NAME_MAX}
characters, or an entire path name exceeded
.Dv {PATH_MAX}
characters.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
.It Bq Er EINVAL
The requested directory is not in the mount table.
.It Bq Er EBUSY
A process is holding a reference to a file located
on the filesystem.
.It Bq Er EIO
An I/O error occurred while writing cached filesystem information.
.It Bq Er EFAULT
.Fa Dir
points outside the process's allocated address space.
.El
.Pp
A
.Em ufs
or
.Em mfs
mount can also fail if the maximum number of filesystems are currently
mounted.
.Sh SEE ALSO
.Xr mount 8 ,
.Xr umount 8 ,
.Xr mfs 8
.Sh BUGS
Some of the error codes need translation to more obvious messages.
.Sh HISTORY
.Fn Mount
and
.Fn umount
function calls appeared in
.At v6 .
